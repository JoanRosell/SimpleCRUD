//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentDTO", Namespace="http://schemas.datacontract.org/2004/07/SimpleCrud.Common.Models")]
    [System.SerializableAttribute()]
    public partial class StudentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentRemoteServiceReference.IStudentRemoteService")]
    public interface IStudentRemoteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/Get", ReplyAction="http://tempuri.org/IStudentRemoteService/GetResponse")]
        SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/Get", ReplyAction="http://tempuri.org/IStudentRemoteService/GetResponse")]
        System.Threading.Tasks.Task<SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/GetAll", ReplyAction="http://tempuri.org/IStudentRemoteService/GetAllResponse")]
        SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/GetAll", ReplyAction="http://tempuri.org/IStudentRemoteService/GetAllResponse")]
        System.Threading.Tasks.Task<SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/Add", ReplyAction="http://tempuri.org/IStudentRemoteService/AddResponse")]
        void Add(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/Add", ReplyAction="http://tempuri.org/IStudentRemoteService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/Update", ReplyAction="http://tempuri.org/IStudentRemoteService/UpdateResponse")]
        void Update(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/Update", ReplyAction="http://tempuri.org/IStudentRemoteService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/Remove", ReplyAction="http://tempuri.org/IStudentRemoteService/RemoveResponse")]
        void Remove(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRemoteService/Remove", ReplyAction="http://tempuri.org/IStudentRemoteService/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentRemoteServiceChannel : SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.IStudentRemoteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentRemoteServiceClient : System.ServiceModel.ClientBase<SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.IStudentRemoteService>, SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.IStudentRemoteService {
        
        public StudentRemoteServiceClient() {
        }
        
        public StudentRemoteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentRemoteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentRemoteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentRemoteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void Add(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData) {
            base.Channel.Add(studentData);
        }
        
        public System.Threading.Tasks.Task AddAsync(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData) {
            return base.Channel.AddAsync(studentData);
        }
        
        public void Update(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData) {
            base.Channel.Update(studentData);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData) {
            return base.Channel.UpdateAsync(studentData);
        }
        
        public void Remove(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData) {
            base.Channel.Remove(studentData);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(SimpleCRUD.Presentation.WinSite.StudentRemoteServiceReference.StudentDTO studentData) {
            return base.Channel.RemoveAsync(studentData);
        }
    }
}
